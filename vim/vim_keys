e
Move to the end of a word.
w 
Move forward to the beginning of a word.
3w 
Move forward three words.
W 
Move forward a WORD (any non-whitespace characters).
b 
Move backward to the beginning of a word.
3b 
Move backward three words.
$ 
Move to the end of the line.
0 
Move to the beginning of the line.
^ 
Move to the first non-blank character of the line.
) 
Jump forward one sentence.
( 
Jump backward one sentence.
} 
Jump forward one paragraph.
{ 
Jump backward one paragraph.
H 
Jump to the top of the screen.
M 
Jump to the middle of the screen.
L 
Jump to the bottom of the screen.
10<PageUp> or 10<CTRL-B>
Move 10 pages up.
5<PageDown> or 5<CTRL-F>
Move 5 pages down.
G 
Jump to end of file.
1G 
Jump to beginning of file (same as gg).
50G 
Jump to line 50.
'm 
Jump to the beginning of the line of mark m.
`m 
Jump to the cursor position of mark m.
''
Return to the line where the cursor was before the latest jump.
(Two single quotes.)
``
Return to the cursor position before the latest jump (undo the jump).
(Two back ticks. This is above the Tab key on some keyboards.)
 % 
Jump to corresponding item, e.g. from an open brace to its matching closing brace.

\<bar\>
matches bar but neither foobar nor barbaz nor foobarbaz.

Use it like this in a substitution:

:s/\<bar\>/baz
Use it like this to list all the lines containing the whole word bar:

:g/\<bar\>
:h pattern is a good read.

:%s/foo/bar/g
Find each occurrence of 'foo' (in all lines), and replace it with 'bar'.

:s/foo/bar/g
Find each occurrence of 'foo' (in the current line only), and replace it with 'bar'.

:%s/foo/bar/gc
Change each 'foo' to 'bar', but ask for confirmation first.

:%s/\<foo\>/bar/gc
Change only whole words exactly matching 'foo' to 'bar'; ask for confirmation.

:%s/foo/bar/gci
Change each 'foo' (case insensitive due to the i flag) to 'bar'; ask for confirmation.

:%s/foo\c/bar/gc is the same because \c makes the search case insensitive.
This may be wanted after using :set noignorecase to make searches case sensitive (the default).

:%s/foo/bar/gcI
Change each 'foo' (case sensitive due to the I flag) to 'bar'; ask for confirmation.

:%s/foo\C/bar/gc is the same because \C makes the search case sensitive.
This may be wanted after using :set ignorecase to make searches case insensitive.

:set number
:set encoding=utf-8

Add
```
let $LANG = 'en'
set langmenu=none
``` 
in the _vimrc file to change to english language

C-R Insert the contents of a numbered or named register.
		Special registers:
			'"'	the unnamed register, containing the text of
				the last delete or yank
			'%'	the current file name
			'#'	the alternate file name
			'*'	the clipboard contents (X11: primary selection)
			'+'	the clipboard contents
			'/'	the last search pattern
			':'	the last command-line
			'-'	the last small (less than a line) delete
			'.'	the last inserted text
							*c_CTRL-R_=*
			'='	the expression register

You can use redir to send it to a file:
:redir > file
:g/for.*bar/#
:redir END

Or to a register:
:redir @a
:g/for.*bar/#
:redir END


